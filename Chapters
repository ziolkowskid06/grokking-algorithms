CHAPTER 1. BINARY SEARCH

def binary_search(list, item):
    """Binary search algorithm displays index of a guessed number"""
    low = 0                   # lower limit (first index)
    high = len(list) - 1      # upper limit (last index)
    while low <= high:
        mid = int((low + high)/2)
        guess = list[mid]       # check middle element
        if guess == item:       # item found
            return mid
        if guess > item:        # guess is too high
            high = mid - 1
        else:                   # guess is too low
            low = mid + 1
    return None                 # item doesn't exist


my_list = [1, 4, 5, 6, 7, 9]
print(binary_search(my_list, 7))

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------


CHAPTER 2. SELECTION SORT

def findSmallest(arr):
    """Finds the smallest element in a array"""
    smallest = arr[0]       # stores the first value
    smallest_index = 0      # stores the index of the first value
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            smallest = arr[i]       # stores the smallest value
            smallest_index = i      # stores the index of the smallest value
    return smallest_index


def selectionSort(arr):
    """Sorts the array"""
    newArr = []
    for i in range(len(arr)):
        smallest = findSmallest(arr)        # finds the index of the smallest element
        newArr.append(arr.pop(smallest))    # add the smallest element to the new array
    return newArr


arr = [5, 3, 6, 2, 10]
print(selectionSort(arr))
print(arr)

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------


CHAPTER 3. RECURSION

def fact(x):
    """Calculate the factorial of a number"""
    if x == 1:
        return 1
    else:
        return x * fact(x-1)    # recusive function call stack


x = 5
print(f"The factorial of {x} is {fact(x)}\n")


def countdown(i):
    """Countdown functon"""
    print(i)
    if i <= 0:              # base case
        return
    else:
        countdown(i-1)      # recursive case


i = 6
print(f"\nLet's countdown from {i}:")
countdown(i)

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------


CHAPTER 4. QUICKSORT
